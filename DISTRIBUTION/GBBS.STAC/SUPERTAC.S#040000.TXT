; *******************
; GBBS "Pro" V:2.3
; Copyright 1980-2023
; Kevin M. Smallwood
; *******************

; SuperTAC Main segment - 7/22/2023
; Version 6.4
; Written by Andy Nicholas
; Updates and modifications by Paul Lee

 public ae.ret
 public enter
 
 on nocar goto link.term
 on error goto error

 store "h:stacvar":clear:recall "h:stacvar":kill "h:stacvar"
 cr$=chr$(13):es$=chr$(27):pc$="No":ld$=lc$
 v1$="l":v2$="j":dd=300:fv=0:tl=1
 if not (flag(20)) print \"Closed.":goto link.main
 ed=edit(5):gosub chk.dir
 input #1\xl\xh\nl\nh\el\eh\sl\sh\ml\mh:close
 gosub chk.mdir

 print \chr$(58,79)
 x$=sn$+" - SuperTAC File Transfer System":nc=40-(len(x$)/2)
 print ":"chr$(32,nc)x$;chr$(32,((77-(len(x$)+nc))))":"
 print chr$(58,79)

 if (nibble(6)=0) copy v1$+":supertac.intro"
 if info(5) vl=xl:vh=xh:goto sub1
 if flag(28) vl=ml:vh=mh:goto sub1
 if (flag(26) or flag(27)) vl=sl:vh=sh:goto sub1
 if flag(25) vl=el:vh=eh:goto sub1
 vl=nl:vh=nh
sub1
 vo$=str$(vl):lg$=v1$+vo$+":":if (fv>0) and (vl>fv) lg$=v2$+vo$+":"
 lg=vl:f1$="":f$="":print \"Access to Volumes:"vl" - "vh

default
 if nibble(14)=0 link "a:supertac.con","conall"
 if nibble(14)>0 link "a:supertac.con","conset"

link.term
 close:link "a:main.seg","term1"

link.main
 link "a:main.seg","fromseg"

enter
 print \chr$(58,25)" SuperTAC Default Parameters "chr$(58,25)
 print "Transfer Protocol: "left$(xm$+chr$(32,25),25)"     Use Packet Switching: "pc$
 print"Master Directory Pause: "left$(pe$+chr$(32,19),19)"      Catalog Line Size: "dx$" Columns"
 print "Show Directory At Log: "left$(gd$+chr$(32,20),20)"      Hang Up After Transfer: "hu$
 print chr$(58,79)

ae.ret
 on nocar goto link.term
 on error goto error
 clear key
 gosub time:print\"["x$"]["on$"SuperTAC"off$"] ";
 print "Option (?=Help): ";:push ae.ret
ae.com
 l1$="DLRSVT?QNXWIBFYMC"+chr$(8)+chr$(10)+chr$(11)+chr$(21)
 if (flag(28) or info(5)) l1$=l1$+"+"
 gosub getone
 if i$="D" goto dir
 if i$="L" goto log
 if i$="R" pop:link "a:supertac.aux"
 if (i$="S") and (xm=1) goto download
 if (i$="S") and (xm>1) goto batch
 if i$="V" goto view
 if i$="T" goto terminate
 if i$="?" goto help
 if i$="Q" goto quit
 if i$="N" goto new
 if i$="X" pop:print "Default Change":link "a:supertac.con"
 if i$=chr$(8) x=lg-1:goto arrows
 if i$=chr$(21) x=lg+1:goto arrows
 if i$=chr$(11) x=lg+10:goto arrows
 if i$=chr$(10) x=lg-10:goto arrows
 if i$="W" goto whats
 if i$="I" pop:print "Info on Files":link "a:supertac.aux"
 if i$="B" pop:print "Binary II file lister":link "a:supertac.aux"
 if i$="F" pop:print "Free Space":link "a:supertac.aux"
 if i$="Y" pop:print "Your Status":link "a:supertac.aux"
 if i$="M" pop:print "Master Directory"\:link "a:supertac.aux"
 if i$="C" pop:print "Copy-Incoming Message"\:link "a:supertac.aux"

 if i$="+" pop:print "SuperTAC System":link "a:supertac.sys"

whats
 print "Whats Where"
 i$=v1$+":where.supertac":gosub show
 return
log
 print "Log Volume":print\"Current:"lg
 input @2"    New:"a$
 if a$="" return
 if (info(5)) and (left$(a$,1)="/") goto slog
 if left$(a$,1)="V" a$=right$(a$,(len(a$)-1))
 x=val(a$)
arrows
 if (x<vl) or (x>vh) print "Not Accessible":return
 ready v1$+":vol.headers":input #msg(x),vp$
 gosub chk.pass:if d=0 print "Not Accessible"\:x=1:goto log1
 if i$=chr$(10) or i$=chr$(11) or i$=chr$(8) or i$=chr$(21) print "Volume "x
log1
 lg=x:vo$=str$(lg):lg$=v1$+vo$+":":if (fv>0) and (lg>fv) lg$=v2$+vo$+":"
 if gd$="Yes" goto dir2:else print sc$"Volume "vo$:return

slog
 input @2 \"NEW Volume A-L:"a$:if a$="" return
 if (left$(a$,1)<"A") or (left$(a$,1)>"L") print "Which Volume ? ":return
 if right$(a$,1)<>":" lg$=a$+":":else lg$=a$
 vo$=lg$:print \"Volume "vo$\
 if gd$="Yes" goto dir3:else return

dir
 if len(lg$)<>2 goto dir1
 vo$=lg$:print \\"Volume "vo$
 goto dir3
dir1
 print "Directory"
dir2
 ready v1$+":vol.headers"
 input #msg(lg),a$
 print \"Volume "vo$\
 copy #6
dir3
 gosub add
 dc=0:gosub dir.head
 gosub makestr
 use v1$+":xcat",0,lg$,fn$,ta$,th$,bu$,mo$,mt$,xd$,xt$,by$
dloop
 if fn$="               " goto endloop
 if left$(fn$,2)="S." and not(info(5)) a=a+1:goto dloop2
 if left$(fn$,2)="E." and not(flag(26)) a=a+1:goto dloop2
 if left$(fn$,2)="M." and not(flag(28)) a=a+1:goto dloop2
 if (flag(35) and (dc>15)) gosub dir.header:else dc=dc+1
 si=peek(ed+22)+peek(ed+23)*256:a=a+1
 print "| "right$("00"+str$(a),2)"  "fn$;
 if cc>0 print" "ta$;:else print " |":goto dloop2
 if cc>0 print" "bu$" | "right$("    "+str$(si),5)" |";
 if cc=1 print:goto dloop2
 gosub get.pd:print " "by$" | "pd$" | ";
 if ta$="REL" print "DDD/Daltons |":goto dloop2
 if th$="$B0" print "APW Source  |":goto dloop2
 if th$="$B3" print "SYS File(16)|":goto dloop2
 if th$="$DD" print "DD Deluxe   |":goto dloop2
 if th$="$F3" print "DigiPack    |":goto dloop2
 if th$="$F5" print "ProPacker   |":goto dloop2
 if th$="$FF" print "SYS File(8) |":goto dloop2
 if left$(ta$,1)="A" print "AppleWorks  |":goto dloop2
 b=peek(ed+9)+peek(ed+10)
 if (th$="$E0") and (b=129) print "ACU         |":goto dloop2
 if (th$="$E0") and (b=130) print "ShrinkIt    |":goto dloop2 
 b=peek(ed+6)
 if right$(left$(fn$,b),4)=".BNY" print "Binary II   |":goto dloop2
 if right$(left$(fn$,b),4)=".BQY" print "Bin II/Sqz  |":goto dloop2
 if right$(left$(fn$,b),4)=".BXY" print "Shrink/Sqz  |":goto dloop2
 print "            |"
dloop2
 if key(1) setint(""):print \"Aborted...":setint(1):goto endlp2
 call ed,0,fn$,ta$,th$,bu$,mo$,mt$,xd$,xt$,by$:goto dloop
endlp2
 use v1$+":xcat",0,lg$,fn$,ta$,th$,bu$,mo$,mt$,xd$,xt$,by$
 setint(""):return
endloop
 if a=0 print on$"No files on this volume"of$:setint(""):return
 print chr$(45,23);
 if cc>0 print chr$(45,18);
 if cc=2 print chr$(45,38):else print
 setint(""):return

chk.pass
 if (un=1) or (vp$="") d=1:return
 input @2 "Password:"i$
 if i$=vp$ d=1:else d=0
 return

add
 setint(cr$):addint(e$):addint(" "):addint(chr$(8))
 addint(chr$(21)):addint(chr$(10)):addint(chr$(11))
 return

show
 gosub add:use v1$+":xshow",i$:setint("")
 if peek(10)=253 print on$"[Error]"of$"...Unviewable Filetype":return
 if peek(10)>0 print on$"[Error]"of$"...Aborted"
 return

view
 if not(flag(23)) print "You may not view files":return
 print "View Files..."
 c=4:d=176:e=26:bz=0:gosub fsel:gosub dtype
 if ((left$(f$,2)="V.") or (bi>25)) if not (info(5)) print on$"File may be sent, but not viewed"of$:return
 print \sn$\
 goto show

download
 if not(flag(21)) print on$"You may not download"of$:return
 print "Send via Xmodem/4modem"
 c=0:bz=0:gosub fsel:gosub dtype:is=si:gosub dl.time
 a=c/60:b=c mod 60:x=(clock(2)-clock(1))/60
 print\"[ Filename Selected ] "f$
 print "[ ProDOS Blocks     ] "bi
 print "[ Xmodem Blocks     ] "si
 print "[ Bytes:  "by$" ]"
 print "[ Transfer Protocol ] Xmodem/4modem"
 print "[ Time for Download ] "a":"right$("00"+str$(b),2)
 if (clock(2)<>0) and (a>x) print \"Not enough time left to D/L":return
 print\"Press <CR> to begin transfer, <ESC> to abort"
 print chr$(45,48)
 l1$=cr$+es$:gosub getone
 if i$<>cr$ print "Aborted":return
 print "Sending via ["on$"XMODEM"of$"]...[Control-X] to Cancel"
 i$=lg$+f$:ts=clock(1):use v1$+":protocol.down",dd,0,i$
 tf=clock(1):fx$=i$:v$=vo$:pt$="XD":gosub make.tlog:if not(info(0)) goto link.term
 if (peek(10)>0) and (peek(10)<>254) print \\on$"[Error]"of$"...Transfer Aborted":return
 dl=dl+1:d2=d2+bi:if d2>9999 d1=d1+1:d2=d2-10000
 dl$=str$(d2):if d1 dl$=str$(d1)+right$("000"+str$(d2),4)
 x=peek(11):i$="Xmodem"
 if x=1 i$="Xmodem/AE Pro"
 if x=2 i$="CRC-Xmodem"
 if x=3 i$="CRC-Xmodem/AE"
 if x=4 i$="Xmodem-1k"
 if x=5 i$="Xmodem-1k /AE"
 if x=6 i$="4modem"
 if x=7 i$="4modem/AE Pro"
 ready v1$+":downloads":v$=vo$:gosub writebf
 if hu$="Yes" goto link.term:else return

writebf
 if msg(0)=512 msg(1)=0:kill #msg(1):crunch
 a=msg(0)+1
 print #msg(a),date$" "time$\f$\v$\a3$" (#"un")"
 print #6,i$
 if info(2)=0 print #6,"Locl"
 if info(2)=1 print #6,"300b"
 if info(2)=4 print #6,"1200"
 if info(2)=8 print #6,"2400"
 if info(2)=16 print #6,"4800"
 if info(2)=24 print #6,"7200"
 if info(2)=32 print #6,"9600"
 if info(2)=64 print #6,"19.2"
 print #6,ty$
 print #6,chr$(0):msg(a)=a:update
 return

batch
 if not(flag(21)) print on$"You may not download"of$:return
 print "Send via Ymodem"
bcom
 gosub time:print \"["x$"]["on$"Batch Command"off$"] ";
 print "Option (?=Help): ";:push bcom
bcom2
 l1$="AB?QCLDVSKR"+chr$(8)+chr$(10)+chr$(11)+chr$(21)+cr$
 gosub getone
 if i$="A" print "Add to Batch":goto abatch
 if i$="B" print "Begin Transfer":gosub shbatch:gosub cbatch:gosub sbatch:pop:return
 if i$="?" copy v1$+":menu.batch":return
 if i$=cr$ print"Exit":pop:return
 if i$="Q" print "Exit":pop:return
 if i$="C" print "Clearing batch file list..";:close:kill "h:batch":print"Done":return
 if i$="L" goto log
 if i$="D" goto dir 
 if i$="V" goto view
 if i$=chr$(8) x=lg-1:goto arrows
 if i$=chr$(21) x=lg+1:goto arrows
 if i$=chr$(11) x=lg+10:goto arrows
 if i$=chr$(10) x=lg-10:goto arrows
 if i$="S" print "Show Batch":gosub shbatch:return
 if i$="K" print "Kill Part of Batch":gosub kbatch:return
 if i$="R" print "Restore Part of Batch":gosub rbatch:return

abatch
 c=0:bz=1:z$="":gosub fsel
abatch2
 bz=0:b=val(z$):if mid$(z$,len(str$(b))+1,1)="," bz=1
 if b<1 print "File number "b" does not exist":return
 if mid$(z$,len(str$(b))+1,1)="-" bz=2
 z$=mid$(z$,len(str$(b))+2)
 if bz=0 gosub fsel3:goto abatch4
 if bz=1 gosub fsel3:gosub abatch4:goto abatch2
 by=val(z$):gosub fsel3:gosub abatch4
abatch3
 b=b+1:if b<by gosub fsel3:gosub abatch4:goto abatch3:else goto abatch2
abatch4
 gosub dtype:an$="Y"
 open #1,"h:batch":a=mark(1):close:if a create "h:batch"
 open #1,"h:batch":position #1,125,0
 input #1,aa:aa=aa+1:position #1,125,0
 print #1,aa:position #1,125,aa
 print #1,lg$,vo$,f$,si,bi,by$,an$
 close:is=si:gosub dl.time
 print \"[ File Selected    ] "f$
 print "[ ProDOS Blocks    ] "bi
 print "[ Xmodem Blocks    ] "si
 print "[ Bytes: "by$" ]"
 print "[ Time to Download ] "a/60":"right$("00"+str$(a mod 60),2)
 return

cbatch
 open #1,"h:batch":position #1,125,0:input #1,aa
 d=0:for a = 1 to aa
 position #1,125,a:input #1,li$,v$,f$,si,bi,by$,an$
 if an$="Y" d=1:a=aa
 next:close:if d return:else pop:return
 
kbatch
 open #1,"h:batch":position #1,125,0:input #1,aa:close
 print "Which file (1-"aa"): ";:input @2 i$:if i$="" return
 a=val(i$):if (a<1) or (a>aa) goto kbatch
 open #1,"h:batch":position #1,125,a:input #1,li$,v$,f$,si,bi,by$,an$
 if an$="N" print "File is already in-active":close:return
 position #1,125,a:an$="N":print #1,li$,v$,f$,si,bi,by$,an$:close
 return
 
rbatch
 open #1,"h:batch":position #1,125,0:input #1,aa:close
 print "Which file (1-"aa"): ";:input @2 i$:if i$="" return
 a=val(i$):if (a<1) or (a>aa) goto kbatch
 open #1,"h:batch":position #1,125,a:input #1,li$,v$,f$,si,bi,by$,an$
 if an$="Y" print "File is already active":close:return
 position #1,125,a:an$="Y":print #1,li$,v$,f$,si,bi,by$,an$:close
 return

sbatch
 print\"Press <CR> to begin transfer, <ESC> to abort"
 print chr$(45,48)
sbatch3
 l1$=cr$+es$:gosub getone
 if i$<>cr$ print "Aborted":return
 print "Sending via ["on$;
 if xm=2 print "YMODEM";
 if xm=3 print "YMODEM-G";
 if xm=4 print "YMODEM-4K";
 print of$"]...[Control-X] to Cancel":m=0:b=0
sbatch5
 open #1,"h:batch"
 m=m+1:position #1,125,m
 input #1,i$,v$,f$,si,bi,by$,an$:close
 if an$="N" goto sbatch5
 if i$<>"" goto sbatch6
 call ed,dd,1:close:kill "h:batch"
 if hu$="Yes" goto link.term:else return
sbatch6
 close:fi$=i$+f$
 ts=clock(1):if not b b=1:use v1$+":protocol.down",dd,1,fi$:else call ed,dd,1,fi$
 tf=clock(1):fx$=fi$:pt$="YD":gosub make.tlog:if not(info(0)) goto link.term
 if (peek(10)>0) and (peek(10)<>254) print \\on$"[Error]"of$"...Transfer Aborted":close:kill"h:batch":return
 i$="Ymodem"
 if peek(11)=1 i$="Ymodem-G"
 if peek(11)=2 i$="Ymodem-4k"
 dl=dl+1:d2=d2+bi:if d2>9999 d1=d1+1:d2=d2-10000
 dl$=str$(d2):if d1 dl$=str$(d1)+right$("000"+str$(d2),4)
 ready v1$+":downloads":gosub writebf
 goto sbatch5

shbatch
 i$="h:batch":gosub dtype:open #1,i$:position #1,125,0:input #1,aa:close
 if (not(si)) or (not(aa)) print "No files in batch":pop:return
 tx=0:tb=0:xx=1
 print\" "chr$(95,77)" "
  print "|"chr$(32,5)"|"chr$(32,18)"|"chr$(32,26)"|"chr$(32,8)"|"chr$(32,10)"|"chr$(32,5)"|"
 print "| Num |  Filename        |  Xmodem/ProDOS/# Bytes   |  Time  |  Volume  | Act |"
  print "|"chr$(95,5)"|"chr$(95,18)"|"chr$(95,26)"|"chr$(95,8)"|"chr$(95,10)"|"chr$(95,5)"|"
  print "|"chr$(32,5)"|"chr$(32,18)"|"chr$(32,26)"|"chr$(32,8)"|"chr$(32,10)"|"chr$(32,5)"|"
sbatch1
 open #1,i$:position #1,125,xx
 input #1,li$,v$,f$,si,bi,by$,an$
 close:xx=xx+1
 if (li$="") or (xx>(aa+1)) goto sbatch2
 if an$="Y" tx=tx+si:tb=tb+bi:is=si:gosub dl.time:else a=0
 if (tb>8000) print \on$"Too much in batch"of$:close:pop:return
 print "| "right$("   "+str$(xx-1),3)" ";
 print "|  "left$(f$+chr$(32,16),16)"|    "right$("    "+str$(si),4);
 print "/ "right$("    "+str$(bi),4)"/ "by$;
 print" |  "right$("00"+str$(a/60),2)":"right$("00"+str$(a mod 60),2);
 print" |    "right$("  "+v$,2)"    |";
 if an$="Y" print " Yes |":else print "  No |"
 goto sbatch1
sbatch2
  print "|"chr$(95,5)"|"chr$(95,18)"|"chr$(95,26)"|"chr$(95,8)"|"chr$(95,10)"|"chr$(95,5)"|"
 is=tx:gosub dl.time        
 print\"[ Total Xmodem Blocks ] - "tx
 print"[ Total ProDOS Blocks ] - "tb
 print"[ Method of Transfer  ] - "xm$
 print"[ Total Download Time ] - "a/60":"right$("00"+str$(a mod 60),2)
 x=clock(2)-clock(1)
 if (clock(2)<>0) and (x<a) print \on$"Not enough time left to D/L"of$:pop:return
 return

new
 print "New Scan since (<"on$"CR"of$"> accepts) "ld$;
 gosub chngdt
 print \"["on$"U"of$"]ploads, or (D)ownloads, or (C)omplete file, or (A)bout Uploads: ";
up1
 l1$="UDCA"+cr$:gosub getone
 if i$="U" or i$=cr$ pv$="New Uploads":ready v1$+":new.uploads":goto up2
 if i$="D" pv$="New Downloads":ready v1$+":downloads":goto up2
 if i$="C" pv$="Complete file":ready v1$+":new.uploads":x=msg(0)+1:goto new3
 if i$="A" pv$="New About Uploads":ready v1$+":about.uploads":goto abouts
 goto up1
up2
 print \\"["on$ld$off$"] Scanning "pv$"..";
 x=msg(0):if not x print "None":return
new2
 print ".";
 input #msg(x),d$
 gosub check.date
 if (d=0) and (x=msg(0)) print "None":return
 if d=0 print "Done"\:goto new3
 x=x-1:if x=0 print "Done"\:goto new3
 goto new2
new3
 print \\"["on$ld$off$"] Scanning "pv$".."\
 print "Note: Volume number displayed may NOT be correct due to maintance"\
 print " #  Filename         Vol  User                  Date       Baud  Protocol"
 print chr$(45,79)
new4
 if i$="C" x=x-1:goto new5
 x=x+1
new5
 if (i$="C") and (x=0) return
 if (i$<>"C") and (x>msg(0)) return
 input #msg(x),d$\f$\v$\fr$\a$\bd$\ty$
 if (val(v$)<vl) or (val(v$)>vh) goto new4
 setint(1)
 f$=left$(f$+chr$(32,15),15)
 v$=left$(v$+chr$(32,2),2)
 fr$=left$(fr$+chr$(32,20),20)
 d$=left$(d$,8)
 x$=right$(chr$(48,3)+str$(x),3)
 print x$" "f$"  "v$"   "fr$"  "d$"   "bd$"  "a$ 
 setint(""):if key(1) return
 goto new4

abouts
 print \\"["on$ld$of$"] Scanning "pv$"..";
 y=msg(0):if not y print "None":return
abt2
 print ".";
 input #msg(y),d$
 gosub check.date
 if (d=0) and (y=msg(0)) print "None":return
 if d=0 print "Done"\:goto abt3
 y=y-1:if y=0 print "Done"\:goto abt3
 goto abt2
abt3
 x=msg(0)
abt4
 input #msg(x),d$\f$\v$\pk$\fr$\ty$
 gosub check.date:if d=0 return
 if not ((val(v$)<vl) or (val(v$)>vh)) goto abt5
 x=x-1:if x=y return:else goto abt4
abt5
 setint(1):x$=str$(x)
 print "[ Number ] "x$
 print "[ File   ] "f$
 print "[ Volume ] "v$
 print "[ Packer ] "pk$        
 print "[ User   ] "fr$
 print "[ Date   ] "d$
 print chr$(45,79)
 copy #6
 print chr$(45,79)\
 setint(""):if key(1) return
 x=x-1:if x=y return
 print "Press <"on$"N"of$"> to continue, <R>e-Read, <ESC> to Quit: ";
 l1$=cr$+es$+"NQR":gosub getone
 if (i$=es$) or (i$="Q") print "Quit":return
 if i$="R" print "Re-Read"\:x=x+1:goto abt4 
 print "Next"\:goto abt4

terminate
 print "Terminate"
 print \"Terminate from "sn$
 print \"Are you sure";:yn=2:gosub getyn
 if i$<>"Y" return
 pop:link "a:main.seg","term1"

help
 print "Commands"
 i$=v1$+":menu.supertac"
 gosub show:return

quit
 print "Quit to Main":pop:goto link.main

fsel
 b=1:gosub getfnum
 if fn$="               " print "No files":pop:return 
fsel1
 print\"[Select File #, or ?]:";
 input @2 i$:z$=i$:if i$="" pop:return
 if i$="?" gosub dir2:goto fsel1
 if bz=1 return
fsel2
 b=val(i$):if b<1 print "No such file number":pop:return
fsel3
 gosub getfnum:if fn$="               " print "No such file number":pop:return
 if left$(fn$,2)="S." and not(info(5)) goto fsel4
 if left$(fn$,2)="E." and not(flag(26)) goto fsel4
 if left$(fn$,2)="M." and not(flag(28)) goto fsel4
 f$=a$:f1$=f$:i$=lg$+f$
 return
fsel4
 print \on$"Inaccessible, try again"of$
 goto fsel1

getfnum
 gosub makestr
 use v1$+":xcat",b,lg$,fn$,ta$,th$,bu$,mo$,mt$,xd$,xt$,by$
 z=peek(ed+6):a$=left$(fn$,z)
 return

chk.dir
 open #1,v1$+":access"
 a=mark(1):if a close:pop:print \on$"Closed."of$:goto link.main
 return

; check for master directory and create if missing 
; from original autodir by Larry Hawkins

chk.mdir
 lo=xl:hi=xh
 f$=v1$+":directory":open #1,f$:a=mark(1):close:if not a return
 if not info(5) pop:print \on$"Closed."of$:goto link.main
 print "Master Directory not found. Creating..."
 gosub msg:ready f$:x=lo:gosub makestr
 print \"Scanning Volume ["on$;
dir10
 in$=right$("0"+str$(x),2):print in$of$"]";
 x$=v1$+str$(x)+":":if (fv>0) and (x>fv) x$=v2$+str$(x)+":"
 use v1$+":xcat",0,x$,fn$,ta$,th$,bu$,mo$,mt$,xd$,xt$,by$
 clear #8
 ready f$:print #msg(x),date$" "time$
dir20
 if fn$="               " copy #8,#6:goto nxtvol
 si=peek(ed+22)+peek(ed+23)*256 
 print #6,fn$" "ta$" "bu$" "right$("    "+str$(si),5)" "xd$
 call ed+3,0,fn$,ta$,th$,bu$,mo$,mt$,xd$,xt$,by$
 goto dir20 
nxtvol
 x=x+1:if (x>hi) close:update:print \\"Complete.":return
 print chr$(8,3);:goto dir10

check.date
 if val(mid$(d$,7,2))>val(mid$(ld$,7,2)) d=1:return
 if val(mid$(d$,7,2))<val(mid$(ld$,7,2)) d=0:return
 if val(mid$(d$,1,2))>val(mid$(ld$,1,2)) d=1:return
 if val(mid$(d$,1,2))<val(mid$(ld$,1,2)) d=0:return
 if val(mid$(d$,4,2))>=val(mid$(ld$,4,2)) d=1:return
 if val(mid$(d$,4,2))<val(mid$(ld$,4,2)) d=0:return
 d=0:return

chngdt
 print chr$(8,8);:input @2 i$
 if i$="" return
 if len(i$)<>8 return
 if (mid$(i$,3,1)<>"/") or (mid$(i$,6,1)<>"/") return
 a=val(mid$(i$,1,2)):if (a<1) or (a>12) return
 a=val(mid$(i$,4,2)):if (a<1) or (a>31) return
 a=val(mid$(i$,7,2)):if (a<1) or (a>99) return
 ld$=i$:return

dir.head
 if dc<>0 print "Press <"on$"RETURN"of$"> ";:get j$:dc=0:print sc$
 print sc$"  ##  Filename";
 if cc>0 print"        Typ   Blks   Xmdm";
 if cc=2 print"      Length   Uploaded   Packer/Type";
 print\chr$(45,23);
 if cc>0 print chr$(45,18);
 if cc=2 print chr$(45,38):else print
 return

makestr
 fn$="               ":ta$="   ":th$="   ":bu$="     "
 mo$="         ":mt$="     "
 xd$="         ":xt$="     "
 by$="         ":a=0
 return

dtype
 use v1$+":xdos","getinfo "+i$:x=peek(ed+7)
 ty$=str$(x):si=peek(ed+21)+peek(ed+22)*256
 bi=peek(ed+11)+peek(ed+12)*256
 return

get.pd
 gosub build.od
 d$=od$:gosub check.date
 if (d=0) pd$=xd$:else pd$="   "+on$+"New"+off$+"   "
 return

build.od
 tm$=mid$(xd$,4,3)
 if tm$="Jan" tm$="01":goto bld.end
 if tm$="Feb" tm$="02":goto bld.end
 if tm$="Mar" tm$="03":goto bld.end
 if tm$="Apr" tm$="04":goto bld.end
 if tm$="May" tm$="05":goto bld.end
 if tm$="Jun" tm$="06":goto bld.end
 if tm$="Jul" tm$="07":goto bld.end
 if tm$="Aug" tm$="08":goto bld.end
 if tm$="Sep" tm$="09":goto bld.end
 if tm$="Oct" tm$="10":goto bld.end
 if tm$="Nov" tm$="11":goto bld.end
 if tm$="Dec" tm$="12"
bld.end
 od$=tm$+"/"+left$(xd$,2)+"/"+mid$(xd$,8,2)
 return

; Calculate download time
; Ymodem-g is about 25% faster than normal Ymodem
; Ymodem-4k is about 14% faster than normal Ymodem
; Packet switching is about 58% slower than normal transmission

dl.time
 br=info(2):if not br then br=8
 if xm<>1 goto dl.y
 y=453
 if (br=1) and ((pc$="Yes") or (si>7000)) a=546:b=7:return
 if br=4 then y=131
 if br=8 then y=66
 if br=16 then y=33
 if br=32 then y=26
 if br=64 then y=13
 if pc$="Yes" y=(y*120)/70
 c=(is/100)*y
 if ((is mod 100) > 70) c=c+448:else c=c+(is mod 100)*y/100
 a=c/60:b=c mod 60
 return
dl.y
 y=400
 if (br=1) and ((pc$="Yes") or (si>7000)) a=32767:return
 if br=4 then y=116
 if br=8 then y=58
 if br=16 then y=46
 if br=32 then y=23
 if br=64 then y=12
 if pc$="Yes" y=(y*120)/70
 if xm=3 y=(y*30)/40
 if xm=4 y=(y*60)/70
 a=(is/100)*y
 if ((is mod 100) > 70) a=a+448:else a=a+(is mod 100)*y/100
 return

make.tlog
 if not tl return
 lb=peek(ed+26)+peek(ed+27)*256
 te=peek(ed+28)+peek(ed+29)*256
 pt=peek(10):tt=tf-ts
 pt$=pt$+str$(peek(11))
 ready v1$+":translog"
 if msg(0)=512 msg(1)=0:kill #msg(1):crunch
 a=msg(0)+1:br=info(2):if pc$="Yes" br=br+100
 print #msg(a),date$" "time$\fx$\v$\un\pt$\br\ty$\pt\te\lb\tt
 print #6,chr$(0):msg(a)=a:update
 return

msg
 ready " ":close:kill f$
 create f$:open #1,f$:clear #8:ed=edit(5):fill ed,255,0:poke ed,16:poke ed+1,16
 write #1,ed,2:fill ed,255,0:for x=1 to 16:write #1,ed,255:next
 write #1,ed,22:close:ready " "
 a$="T "+f$+",BIN":use v1$+":xdos",a$
 return

; *** sub - routines ***

; get a key
; l1$ is the list of available keys
getone
; print ": ";
getone.2
 get i$
 if instr(i$,l1$) return
 goto getone.2

; This routine gets a Yes/No answer
; A prompt is printed, hilighting the default
; response (if any)

; Input parameters are:

; yn	= 0:	No default
; yn	= 1:	Default is yes
; yn	= 2:	Default is no

getyn
 print " (";:l1$="YN"
 if yn:l1$=l1$+cr$
 if yn=1 print "["on$"Y"of$"]";:else print "Y";
 print "/";
 if yn=2 print "["on$"N"of$"]";:else print "N";
 print "): ";:gosub getone

 if i$=cr$:i$=mid$("YN",yn,1)
 if i$="Y" print "Yes":else print "No"
 yn=0:return

; get time remaining before logoff
time
 x=(clock(2)-clock(1))/60:y=clock(2):x$=right$("0"+str$(x),2)
 if clock(1)>clock(2) x$="!!"
 if x=0 x$="--"
 if not y x$="**"
 if info(5) x$="::"
 return

; report an error
error
 close
 use "b:snapshot","b:snap.txt"
 print\sc$"A fatal error has occured. One moment, please..."\
 open #1,"b:error.list":position #1,32,err:input #1,er$:close
 f$="b:sys.errors":create f$:open #1,f$:append #1
 print #1,"Error #"err" ("er$") occurred in SUPERTAC.S at "time$" "fmtdate$"."
 print #1,a1$" "a2$ "(#"un") was online when this occured."
 copy "b:snap.txt",#1
 kill "b:snap.txt"
 print #1,"----------------------------------------------------------------"
 close:goto link.term
